---
- name: remove postgresql container
  become: yes
  community.docker.docker_container:
    name: postgres-container
    image: quay.io/dmartino/postgres:9.6
    state: absent
    ports:
      - "5432:5432"
  register: postgresql_out

- name: Create postgresql container and init with the initial kogito setup required for postgres (db and roles, app will create tables on startup)
  block:
  - name: Start a postgresql container if not running already
    become: yes
    community.docker.docker_container:
      name: postgres-container
      image: quay.io/dmartino/postgres:9.6
      state: started
      env:
        POSTGRES_PASSWORD: pass
      ports:
        - "5432:5432"
  # the volume definition causes the container to exit immediately - workaround see below
  #    volumes:
  #      - ./roles/postgres-container-docker/sql:/docker-entrypoint-initdb.d/

  - name: Give installing user access to the directory where we want to save the sql script
    become: yes
    command: docker exec postgres-container chown -R 1004:1111 /docker-entrypoint-initdb.d

  - name: Copy script file on host into container
    become: yes
    command: docker cp "{{ install_dir }}/kogito-benchmark/test-apps/process-quarkus-example/docker/postgres/sql/init.sql" postgres-container:/docker-entrypoint-initdb.d

  - name: Execute script
    become: yes
    command: docker exec postgres-container psql -U postgres -d postgres -f docker-entrypoint-initdb.d/init.sql
  when: test_defs.AppInfra.PostgresQL == "yes"

