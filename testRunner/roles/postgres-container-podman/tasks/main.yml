---
- name: Create the postgres network
  containers.podman.podman_network:
    name: postgres-compose-network
    driver: bridge

- name: remove postgresql container if present
  containers.podman.podman_container:
    name: postgres-container
    image: registry.redhat.io/rhel8/postgresql-10:1-157
    state: absent
    ports:
      - "5432:5432"
  register: postgresql_out
  when: test_defs.Infra.PostgresQL == "no"

- name: remove pgadmin container if present
  containers.podman.podman_container:
    name: pgadmin-container
    image: quay.io/dmartino/pgadmin4:5.0
    state: absent
    ports:
      - "8055:80"
  register: postgresql_out_pgadmin
  when: test_defs.Infra.PostgresQL == "no"

#    - name: remove pgadmin container if present
#      containers.podman.podman_container:
#        name: pgadmin-container
#        image: registry.connect.redhat.com/crunchydata/crunchy-pgadmin4:ubi8-13.4-4.7.3
#        state: absent
#        ports:
#          - "8055:80"
#      register: postgresql_out_pgadmin
#      when: test_defs.Infra.PostgresQL == "no"

- name: Start a postgresql container if not running already
  containers.podman.podman_container:
    name: postgres-container
    image: registry.redhat.io/rhel8/postgresql-10:1-157
    state: started
    env:
      POSTGRESQL_ADMIN_PASSWORD: pass
    ports:
      - "5432:5432"
    #        volumes:
    #          - ./test-infra/sql:/docker-entrypoint-initdb.d/
    network:
      - postgres-compose-network
  register: postgresql_out
  when: test_defs.Infra.PostgresQL == "yes"

- name: Start a pgadmin container if not running already
  containers.podman.podman_container:
    name: pgadmin-container
    image: quay.io/dmartino/pgadmin4:5.0
    state: started
    env:
      PGADMIN_DEFAULT_EMAIL: user@user.org
      PGADMIN_DEFAULT_PASSWORD: pass
    ports:
      - "8055:80"
    network:
      - postgres-compose-network
  register: postgresql_out_pgadmin
  when: test_defs.Infra.PostgresQL == "yes"

#    - name: Start a pgadmin container if not running already
#      containers.podman.podman_container:
#        name: pgadmin-container
#        image: registry.connect.redhat.com/crunchydata/crunchy-pgadmin4:ubi8-13.4-4.7.3
#        state: started
#        env:
#          PGADMIN_SETUP_EMAIL: user@user.org
#          PGADMIN_SETUP_PASSWORD: pass
#        ports:
#          - "8055:80"
#        network:
#          - postgres-compose-network
#      register: postgresql_out_pgadmin
#      when: test_defs.Infra.PostgresQL == "yes"

#    - name: postgresql debug
#      ansible.builtin.debug:
#        msg:
#          - "postgresql_out: {{ postgresql_out }}"
#          - "postgresql_out_pgadmin: {{ postgresql_out_pgadmin }}"

