---
- name: install and/or build and run application and infra
  hosts: "{{ app }}"
  vars:
    test_defs: "{{ lookup('file',''+testdefs+'') | from_json }}"
    ansible_python_interpreter: /usr/bin/python3
  tasks:

####################### MONGO INFRA

    - name: is mongo requested for persistence?
      ansible.builtin.debug:
        msg:
          - "Mongo Infra requested:{{ test_defs.AppInfra.Mongo }}"

    - name: Set a app_profile variable
      ansible.builtin.set_fact:
        app_profile: mongo
      when: test_defs.AppInfra.Mongo == "yes"

    - name: Include the mongo containers setup role
      include_role:
        name: mongo-container-{{ test_defs.InfraSetup.container }}

####################### POSTGRES INFRA

    - name: is postgres requested for persistence?
      ansible.builtin.debug:
        msg:
          - "PostgresQL Infra requested:{{ test_defs.AppInfra.PostgresQL }}"

    - name: Set a app_profile variable
      ansible.builtin.set_fact:
        app_profile: postgres
      when: test_defs.AppInfra.PostgresQL == "yes"

    - name: Include the postgres containers setup role
      include_role:
        name: postgres-container-{{ test_defs.InfraSetup.container }}

######################### APPLICATION

    - name: trying to stop business process app - might not be running
      ansible.builtin.shell: ./stopTheApp.sh
      args:
        chdir: "{{install_dir}}/kogito-benchmark/test-apps/process-quarkus-example/"

    - name: setup benchmark project - once per batch run
      block:
        - name: remove any previous existing benchmark
          ansible.builtin.file:
            path: "{{install_dir}}/kogito-benchmark"
            state: absent

        - name: checkout the app version "{{ test_defs.InfraSetup.appVersion }}"
          ansible.builtin.git:
            repo: https://github.com/RHEcosystemAppEng/kogito-benchmark.git
            dest: "{{install_dir}}/kogito-benchmark"
            #        single_branch: yes
            version: "{{ test_defs.InfraSetup.appVersion }}"

        - name: copy current test configuration to {{install_dir}}/kogito-benchmark/test/test-run
          ansible.builtin.copy:
            src: "test-resources/batch.json"
            dest: "{{install_dir}}/kogito-benchmark/test/test-run/"

        - name: set JMeter Home directory to "{{install_dir}}/jmeter/apache-jmeter-5.4.1"
          ansible.builtin.copy:
            dest: "{{install_dir}}/kogito-benchmark/test-clients/jmeter-client/jmeterHome.txt"
            content: "{{install_dir}}/jmeter/apache-jmeter-5.4.1"
      when: testidx == '0'

    - name: build and run business process app
      ansible.builtin.shell: ./runAppInTheBackground.sh "{{ app_profile }}"
      args:
        chdir: "{{install_dir}}/kogito-benchmark/test-apps/process-quarkus-example/"

# run Lokeshs validations on env


