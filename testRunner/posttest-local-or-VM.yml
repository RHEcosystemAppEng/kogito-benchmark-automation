---
- name: on app - confirm environment
  hosts: "{{ app }}"
  vars:
    test_defs: "{{ lookup('file',''+testdefs+'') | from_json }}"
    ansible_python_interpreter: /usr/bin/python3
  tasks:

    - name: checks on mongo after tests are run
      include_role:
        name: mongo-container-direct
      vars:
        reqRoleAction: 'post-test'
        containerType: "{{ test_defs.InfraSetup.container }}"
      when: test_defs.AppInfra.Mongo == "yes"

- name: from tester - get data for report generation
  hosts: "{{ tester }}"
  tasks:

    - name: make sure report folder is empty
      ansible.builtin.file:
        path: "../reportGenerator/test-run"
        state: absent
      delegate_to: 127.0.0.1

    - name: fetch remote results folder into reportGenerator
      block:
        - name: Compress directory "{{install_dir}}/kogito-benchmark/test/test-run"
          community.general.archive:
            path: "{{install_dir}}/kogito-benchmark/test/test-run"
            dest: "{{install_dir}}/kogito-benchmark/test/test-run.tgz"

        - name: fetch remote folder {{install_dir}}/kogito-benchmark/test/test-run.tgz
          ansible.builtin.fetch:
            src: "{{install_dir}}/kogito-benchmark/test/test-run.tgz"
            dest: ../reportGenerator/
            flat: yes

        - name: unarchive results locally
          ansible.builtin.unarchive:
            src: ../reportGenerator/test-run.tgz
            dest: ../reportGenerator
          delegate_to: 127.0.0.1

        - name: remove local compressed file
          ansible.builtin.file:
            path: ../reportGenerator/test-run.tgz
            state: absent
          delegate_to: 127.0.0.1

        - name: remove remote compressed file
          ansible.builtin.file:
            path: "{{install_dir}}/kogito-benchmark/test/test-run.tgz"
            state: absent

- name: run post test - controller machine operations
  hosts: "{{ controller }}"
  tasks:

    - name: run report generator on results
      block:
        - name: setup virtual python env
          ansible.builtin.shell: |
            python3 -m venv kogito-venv
            source kogito-venv/bin/activate
            pip install --upgrade pip
            pip3 install -r requirements.txt
            python3 -m jupyter nbconvert --execute benchmarkReport.ipynb --to html --no-input
          args:
            chdir: ../reportGenerator